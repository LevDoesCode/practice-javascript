// chained with returned values
async function f3() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {resolve(3)}, 2000);
    });
}

async function f4() {
    return new Promise((resolve, reject) => {
        setTimeout(() => {resolve(4)}, 2000);
    });
}

f3()
    .then((value) => {console.log(value); return f4()})
    .then((value) => {console.log(value)})
    .then(() => console.log('done')) // executes immediately after the last promise is settled
    .then(() => console.log('really done')); // executes immediately after the last promise is settled
